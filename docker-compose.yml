services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: "pg_isready -d postgres -U postgres"
      interval: 5s
      timeout: 2s
      retries: 5
      start_period: 10s
    networks:
      - backend

  liquibase-migrations:
    image: liquibase/liquibase:4.18
    depends_on:
      - db
    command:
      - --hub-mode=off
      - --changelog-file=master.xml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://db:5432/postgres
      - --username=postgres
      - --password=postgres
      - update
    volumes:
      - ./migrations:/liquibase/changelog
    networks:
      - backend

  eureka-server:
    build:
      context: .
      dockerfile: docker/eureka-server.Dockerfile
    ports:
      - "8761:8761"
    healthcheck:
      test: "curl --silent --fail eureka-server:8761/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  config-server:
    build:
      context: .
      dockerfile: docker/config-server.Dockerfile
    ports:
      - "8888:8888"
    depends_on:
      eureka-server:
        condition: service_healthy
    environment:
      EUREKA_URL: http://eureka-server:8761/eureka/
    healthcheck:
      test: "curl --silent --fail config-server:8888/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  gateway:
    build:
      context: .
      dockerfile: docker/gateway.Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      EUREKA_URL: http://eureka-server:8761/eureka/
      CONFIG_SERVER_URL: http://config-server:8888
    healthcheck:
      test: "curl --silent --fail gateway:8080/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  pgdata:

networks:
  backend:
    driver: bridge
